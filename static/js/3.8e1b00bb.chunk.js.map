{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js"],"names":["module","exports","CheckoutSummary","props","className","classes","Burger","BurgerComponent","ingredients","Button","btnType","action","checkoutContinued","checkoutCancelled","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","to","this","path","match","exact","component","ContactData","Component","connect","state","bBReducer","price","bBReducerprice"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,OAAS,kC,4HC0BvEC,EAtBS,SAACC,GACvB,OACE,sBAAKC,UAAWC,IAAQH,gBAAxB,UACE,yDACA,qBAAKE,UAAWC,IAAQC,OAAxB,SACE,cAACA,EAAA,EAAD,CACEF,UAAWC,IAAQE,gBACnBC,YAAaL,EAAMK,gBAGvB,gCACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,OAAQR,EAAMS,kBAAxC,sBAGA,cAACH,EAAA,EAAD,CAAQC,QAAQ,SAASC,OAAQR,EAAMU,kBAAvC,2B,uBCbFC,E,4MAcJC,yBAA2B,WACzB,EAAKZ,MAAMa,QAAQC,U,EAErBC,yBAA2B,WACzB,EAAKf,MAAMa,QAAQG,QAAQ,2B,uDAjB7B,c,oBAoBA,WACE,IAAIC,EACF,8BACE,cAAC,IAAD,CAAUC,GAAG,QAqBjB,OAjB+B,OAA3BC,KAAKnB,MAAMK,cACbY,EACE,gCACE,cAAC,EAAD,CACEZ,YAAac,KAAKnB,MAAMK,YACxBK,kBAAmBS,KAAKP,yBACxBH,kBAAmBU,KAAKJ,2BAG1B,cAAC,IAAD,CACEK,KAAMD,KAAKnB,MAAMqB,MAAMD,KAAO,gBAC9BE,OAAK,EACLC,UAAWC,UAKZP,M,GA7CYQ,aAwDRC,uBAPS,SAACC,GACvB,MAAO,CACLtB,YAAasB,EAAMC,UAAUvB,YAC7BwB,MAAOF,EAAMG,kBAIFJ,CAAyBf","file":"static/js/3.8e1b00bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\",\"Burger\":\"CheckoutSummary_Burger__1wJm6\"};","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\nimport classes from \"./CheckoutSummary.module.css\";\n\nconst CheckoutSummary = (props) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div className={classes.Burger}>\n        <Burger\n          className={classes.BurgerComponent}\n          ingredients={props.ingredients}\n        />\n      </div>\n      <div>\n        <Button btnType=\"Success\" action={props.checkoutContinued}>\n          Continue\n        </Button>\n        <Button btnType=\"Danger\" action={props.checkoutCancelled}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"./ContactData/ContactData\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  componentDidMount() {\n    // const query = new URLSearchParams(this.props.location.search);\n    // const ingredients = {};\n    // for (let param of query.entries()) {\n    //   if (param[0] === \"price\") {\n    //     this.setState({ price: param[1] });\n    //     continue;\n    //   }\n    //   ingredients[param[0]] = +param[1];\n    // }\n    // this.setState({ ingredients });\n  }\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    let summary = (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    );\n\n    if (this.props.ingredients !== null)\n      summary = (\n        <div>\n          <CheckoutSummary\n            ingredients={this.props.ingredients}\n            checkoutCancelled={this.checkoutCancelledHandler}\n            checkoutContinued={this.checkoutContinuedHandler}\n          />\n\n          <Route\n            path={this.props.match.path + \"/contact-data\"}\n            exact\n            component={ContactData}\n          />\n        </div>\n      );\n\n    return summary;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.bBReducer.ingredients,\n    price: state.bBReducerprice,\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n"],"sourceRoot":""}